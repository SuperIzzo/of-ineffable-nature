pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- spookymanor
-- team spook

-- ##################
--       flags
-- ##################
flag_collision = 6
flag_anim_end = 0
flag_sprite_map_bottom_layer = 6
flag_sprite_map_top_layer = 7

-- ##################
-- movement variables
-- ##################

-- base speed for actors to move at
g_speed_accel = 1

-- how many frames between updating character frames
g_anim_update_interval = 5


-- ##################
--    common vars
-- ##################

-- global frame count 
g_frame = 0

-- ##################
--    camera vars
-- ##################
camera_x = 0
camera_y = 0

-- the global pool of actors
actors = {}


-- gets the world position of the actor, as the actor.x and actor.y
--  store the actors position in cell coordinates
function transform_world_to_cell_coord(v)
    -- convert to world from cell, divide by 8 (due to 1 map cell being 8x8)
    --  then add 4 (half of the cell size)
    return (v / 8) + 4
end

-- player functions
function pl_move()

    local x = 0
    local y = 0

    -- left
    if (btn(0)) x = -1

    -- right
    if (btn(1)) x = 1

    -- up
    if (btn(2)) y = -1

    -- down
    if (btn(3)) y = 1

    add_force_to_actor(pl,x,y)

end


-- main entry points
function _init()
    pl = add_actor(1,1,0)
    pl.isplayer = true
end

function _update()
    foreach(actors, update_actor)
end

function _draw()

    --clear the screen first
    cls()

    -- map(0,0,0,0,16,16,flag_sprite_map_bottom_layer)

    foreach(actors, draw_actor)

    -- map(0,0,0,0,16,16,flag_sprite_map_top_layer)

    print("world xy "..pl.x ..","..pl.y,camera_x,110,7)
    print("map x "..transform_world_to_cell_coord(pl.x)  ..","..transform_world_to_cell_coord(pl.y),camera_x,120,7)

    print("fps "..stat(7) ,camera_x + 100,120,7)

end

-- Actor Functions

function setup_pl_anims(a)
    -- Right, down, left, and up consist of 4 frames
    a.anim_sz = { 4, 4, 4, 4 }

    for i=1, 8 do
        a.anim[i] = {}
        for y=1, 4 do
            a.anim[i][y] = 0
        end
    end
    
    -- 1 = Upper Right
    -- 2 = Lower Right
    -- 3 = Upper Down
    -- 4 = Lower Down
    -- 5 = Upper Left
    -- 6 = Lower Left
    -- 7 = Upper Top
    -- 8 = Lower Top

    -- Upper Frames - Since they're all the same right now
    for i=1,4 do
        a.anim[1][i] = 38   --Right
        a.anim[3][i] = 6   --Down
        a.anim[5][i] = 38   --Left
        a.anim[7][i] = 9   --Up
    end

    -- Right and Left Lower Frames
    a.anim[2][1] = 54
    a.anim[2][2] = 55
    a.anim[2][3] = 54
    a.anim[2][4] = 56
    
    -- Left is the same as right
    for i=1,4 do
        a.anim[6][i] = a.anim[2][i]
    end

    -- Down Lower Frames
    a.anim[4][1] = 22
    a.anim[4][2] = 23
    a.anim[4][3] = 22
    a.anim[4][4] = 24

    -- Up Lower Frames
    a.anim[8][1] = 25
    a.anim[8][2] = 26
    a.anim[8][3] = 25
    a.anim[8][4] = 27
end

-- add an actor to the pool: 
-- x pos
-- y pos
-- actor type: 0 = player
function add_actor(x,y,at)
    local a = {}

    -- this x and y is world position, in pixels
    a.x = x
    a.y = y

    a.anim = { }

    -- If this is a player, setup the player anims
    if at == 0 then
       setup_pl_anims(a) 
        

    end

    -- physics delta speed variables.
    a.dx = 0
    a.dy = 0

    -- facing direction. 1 = right, 2 = down, 3 = left, 4 = up
    a.dir = 1

    -- is the actor moving
    a.moving = false

    -- current frame displaying; for upper and lower body
    a.frame = 1
    -- current animation frame timer
    a.frametime = 0

    a.isplayer = false

    add(actors, a)

    return a
end

-- add movement force to the actor:
-- the actor to add to
-- desired x direction - 0 is still, -1 is left, 1 is right
-- desired y direction - 0 is still, -1 is up, 1 is down
function add_force_to_actor(a,x,y)

    -- todo do we want this here? need to degrade it somehow rather than straight 0?
    a.dx = 0
    a.dy = 0

    -- any movement at all? set the actor moving
    a.moving = (x != 0 or y != 0)

    -- if not moving, set frame as 1 then exit out
    if (not a.moving) a.frame = 1 return

    if x > 0 then       a.dir = 1 --going right
    elseif x < 0 then   a.dir = 3 --going left
    elseif y > 0 then   a.dir = 2 --going down
    else                a.dir = 4 --going up
    end


    -- movement physics below


    -- apply global acceleration depending on desired x/y
    a.dx += g_speed_accel * x
    a.dy += g_speed_accel * y


    -- animation selection below

    a.frametime+=1
    
    -- exit out if we haven't reached the frame update time
    if (a.frametime % g_anim_update_interval != 0)  return

    -- If we've reached the end, reloop
    if a.frame == a.anim_sz[a.dir] then
        a.frame = 1
    else
        a.frame += 1
    end

    a.frametime = 0

end

function update_actor(a)

    if (a.isplayer) pl_move(a)


    a.x += a.dx
    a.y += a.dy

end

function draw_actor(a)

    local dir = a.dir*2

    -- Upper
    spr(a.anim[dir-1][a.frame],     a.x,    a.y - 8,    1.0,    1.0, a.dir == 3)
    
    -- Lower
    spr(a.anim[dir][a.frame],       a.x,    a.y,        1.0,    1.0, a.dir == 3)

end

__gfx__
00000000776077600000000055555555bbbbbbb60400004000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000766d766d0004400065555555bbbbbb6b04dddd4000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700d555d5550004400055555555b6bbbbbb0444444000999900009999000099990000999900009999000099990000000000000000000000000000000000
000770007765776500022000555511554bb3bbbb0400004009aaaaa009aaaaa009aaaaa009aaaaa009aaaaa009aaaaa000000000000000000000000000000000
00077000766576654442224455555115bbbbbbbb0400004099a99a9a99a99a9a99a99a9aaaa99a9aaaa99a9aaaa99a9a00000000000000000000000000000000
00700700555d555d2222255255511115bbbbbbbb04dddd409aff99aa9aff99aa9aff99aa9a9aa9a99a9aa9a99a9aa9a900000000000000000000000000000000
00000000555555550002200011111111bbbb6bbb04444440971ff19a971ff19a971ff19a9a9aa9a99a9aa9a99a9aa9a900000000000000000000000000000000
00000000555555550002200011111151bbbbbbb604000040a7cffc7aa7cffc7aa7cffc7aaa9aa9a9aa9aa9a9aa9aa9a900000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbb6000000000ffffff00ffffff00ffffff00a9aaaa00a9aa9a00a9aa9a000000000000000000000000000000000
000000000000000000000000bbbbbbbbb6bbbbbb0000000009ffff9009ffff9009ffff90099a9a9009a9a990099a9a9000000000000000000000000000000000
000000000000000000000000b6bb3bbbbbbbbbbb000000008ee888e80ee88ee88ee88ee08e9a99980e9999e88e9999e000000000000000000000000000000000
000000000000000000000000bb6bbbbbbbbbbbbb0000000088eeee88888eee8888eee88888e99e88888e99888899e88800000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbbb00000000888ee8888888e8ffff8e8888888998888888e8ffff8e888800000000000000000000000000000000
000000000000000000000000bbbbbbbbbb3bb6bb00000000ff8888fff88888ffff88888fff8888fff88888ffff88888f00000000000000000000000000000000
000000000000000000000000bbbbb6bbbbbbbbbb000000000dd88dd00dd8811001188dd00dd88dd00dd8811001188dd000000000000000000000000000000000
000000000000000000000000bbbbbbbbbbbbbbbb00000000000000000dd0000000000dd0000000000dd0000000000dd000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000009909990099099900990999000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000099a9aa9999a9aa9999a9aa9900000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000009aa9a9a99aa9a9a99aa9a9a900000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000009aaaa9f99aaaa9f99aaaa9f900000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000009a9a91f09a9a91f09a9a91f000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000009a997cf09a997cf09a997cf000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000099f9fff099f9fff099f9fff000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000099efff0099efff0099efff0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000099eeeee0998ee8e09aeeee0000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000090e88e009088ee8fa0e88ee000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000008ffe0000ff8e8f0088ffe000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000008ff80001ff88dd00d8ff1000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000008ddd1000110ddd00dd011000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000013140414131400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000003040304030400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000010101010101000013141314131400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000003040304030400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000013141314131400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0001000025650246501e650226501e65022650206501d6501d6501c6501b6501965019650276502565019650236501a6501a6501e6502c6501f6501f650296502365026650256502665017650236502165018650
01100000156500e6502165012650116501a6501f65015650276502365013650276502165022650206501a650266501e65029650246501f6501b6501f65025650216501b650246502665026650246502465025650